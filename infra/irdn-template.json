{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Irdn.is helpers",
    "Parameters": {
        "CodeBucketName": {
            "Description": "S3 bucket that contains lambda code for ssl update",
            "Type": "String"
        },
        "Domain": {
            "Description": "Domain to host page on",
            "Type": "String",
            "Default": "irdn.is"
        },
        "CertificateId": {
            "Description": "SSLCertificate to use. If not specified, defaults to default cloudformation certificate.",
            "Type": "String",
            "Default": ""
        }
    },
    "Conditions": {
        "SSLCertificateEmpty": {
            "Fn::Equals": [
                {
                    "Ref": "CertificateId"
                },
                ""
            ]
        }
    },
    "Resources": {
        "WebPageBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
                "WebsiteConfiguration": {
                    "ErrorDocument": "index.html",
                    "IndexDocument": "index.html"
                }
            }
        },
        "PublicReadPlicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
                "Bucket": {
                    "Ref": "WebPageBucket"
                },
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "s3:GetObject"
                            ],
                            "Effect": "Allow",
                            "Resource": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "arn:aws:s3:::",
                                        {
                                            "Ref": "WebPageBucket"
                                        },
                                        "/*"
                                    ]
                                ]
                            },
                            "Principal": "*"
                        }
                    ]
                }
            }
        },
        "SSLUpdater": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Description": {
                    "Fn::Join": [
                        " ",
                        [
                            "Update ssl certificate for",
                            {
                                "Ref": "Domain"
                            }
                        ]
                    ]
                },
                "Handler": "https.handler",
                "MemorySize": "512",
                "Timeout": "300",
                "Role": {
                    "Fn::GetAtt": [
                        "ExecutionRole",
                        "Arn"
                    ]
                },
                "Code": {
                    "S3Bucket": {
                        "Ref": "CodeBucketName"
                    },
                    "S3Key": "code.zip"
                },
                "Runtime": "python3.6"
            }
        },
        "CloudFront": {
            "Type": "AWS::CloudFront::Distribution",
            "Properties": {
                "DistributionConfig": {
                    "Aliases": [
                        {
                            "Ref": "Domain"
                        }
                    ],
                    "ViewerCertificate": {
                        "CloudFrontDefaultCertificate": {
                            "Fn::If": [
                                "SSLCertificateEmpty",
                                true,
                                {
                                    "Ref": "AWS::NoValue"
                                }
                            ]
                        },
                        "IamCertificateId": {
                            "Fn::If": [
                                "SSLCertificateEmpty",
                                {
                                    "Ref": "AWS::NoValue"
                                },
                                {
                                    "Ref": "CertificateId"
                                }
                            ]
                        },
                        "SslSupportMethod": {
                            "Fn::If": [
                                "SSLCertificateEmpty",
                                {
                                    "Ref": "AWS::NoValue"
                                },
                                "sni-only"
                            ]
                        }
                    },
                    "DefaultCacheBehavior": {
                        "AllowedMethods": [
                            "DELETE",
                            "GET",
                            "HEAD",
                            "OPTIONS",
                            "PATCH",
                            "POST",
                            "PUT"
                        ],
                        "DefaultTTL": 0,
                        "ForwardedValues": {
                            "QueryString": true
                        },
                        "MaxTTL": 0,
                        "MinTTL": 0,
                        "TargetOriginId": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "Domain"
                                    },
                                    "cf",
                                    "-origin"
                                ]
                            ]
                        },
                        "ViewerProtocolPolicy": {
                            "Fn::If": [
                                "SSLCertificateEmpty",
                                "allow-all",
                                "redirect-to-https"
                            ]
                        }
                    },
                    "Enabled": true,
                    "Origins": [
                        {
                            "DomainName": {
                                "Fn::Join": [
                                    ".",
                                    [
                                        {
                                            "Ref": "WebPageBucket"
                                        },
                                        "s3-website-eu-west-1.amazonaws.com"
                                    ]
                                ]
                            },
                            "Id": {
                                "Fn::Join": [
                                    "-",
                                    [
                                        {
                                            "Ref": "Domain"
                                        },
                                        "cf",
                                        "-origin"
                                    ]
                                ]
                            },
                            "CustomOriginConfig": {
                                "OriginProtocolPolicy": "http-only"
                            }
                        }
                    ]
                }
            }
        },
        "DNS": {
            "Type": "AWS::Route53::RecordSet",
            "Properties": {
                "HostedZoneName": "irdn.is.",
                "Comment": "Alias for s3 website",
                "Name": {
                    "Ref": "Domain"
                },
                "Type": "A",
                "AliasTarget": {
                    "DNSName": {
                        "Fn::GetAtt": [
                            "CloudFront",
                            "DomainName"
                        ]
                    },
                    "HostedZoneId": "Z2FDTNDATAQYW2"
                }
            }
        },
        "ExecutionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "lambda.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                    }
                },
                "Policies": [
                    {
                        "PolicyName": "ManageCertificates",
                        "PolicyDocument": {
                            "Statement": {
                                "Effect": "Allow",
                                "Action": [
                                    "iam:UploadServerCertificate",
                                    "iam:UpdateServerCertificate",
                                    "iam:DeleteServerCertificate",
                                    "iam:ListServerCertificates"
                                ],
                                "Resource": [
                                    "*"
                                ]
                            }
                        }
                    },
                    {
                        "PolicyName": "PutObjectBucket",
                        "PolicyDocument": {
                            "Statement": {
                                "Effect": "Allow",
                                "Action": [
                                    "s3:PutObject",
                                    "s3:PutObjectACL"
                                ],
                                "Resource": [
                                    {
                                        "Fn::Join": [
                                            "/",
                                            [
                                                {
                                                    "Fn::GetAtt": [
                                                        "WebPageBucket",
                                                        "Arn"
                                                    ]
                                                },
                                                "*"
                                            ]
                                        ]
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "PolicyName": "DeleteObjectBucket",
                        "PolicyDocument": {
                            "Statement": {
                                "Effect": "Allow",
                                "Action": [
                                    "s3:DeleteObject"
                                ],
                                "Resource": [
                                    {
                                        "Fn::Join": [
                                            "/",
                                            [
                                                {
                                                    "Fn::GetAtt": [
                                                        "WebPageBucket",
                                                        "Arn"
                                                    ]
                                                },
                                                ".well-known",
                                                "*"
                                            ]
                                        ]
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "PolicyName": "DistributionStuff",
                        "PolicyDocument": {
                            "Statement": {
                                "Effect": "Allow",
                                "Action": [
                                    "cloudfront:GetDistributionConfig",
                                    "cloudfront:UpdateDistribution"
                                ],
                                "Resource": [
                                    "*"
                                ]
                            }
                        }
                    },
                    {
                        "PolicyName": "StackStuff",
                        "PolicyDocument": {
                            "Statement": {
                                "Effect": "Allow",
                                "Action": [
                                    "cloudformation:DescribeStacks"
                                ],
                                "Resource": [
                                    "*"
                                ]
                            }
                        }
                    },
                    {
                        "PolicyName": "LogStuff",
                        "PolicyDocument": {
                            "Statement": {
                                "Effect": "Allow",
                                "Action": [
                                    "logs:*"
                                ],
                                "Resource": [
                                    "arn:aws:logs:::*"
                                ]
                            }
                        }
                    },
                    {
                        "PolicyName": "SNSStuff",
                        "PolicyDocument": {
                            "Statement": {
                                "Effect": "Allow",
                                "Action": [
                                    "SNS:Publish"
                                ],
                                "Resource": [
                                    "*"
                                ]
                            }
                        }
                    }
                ]
            }
        }
    },
    "Outputs": {
        "LambdaFunctionName": {
            "Description": "Name of the lambda function to update ssl",
            "Value": {
                "Ref": "SSLUpdater"
            }
        },
        "WebPageBucket": {
            "Description": "Bucket to store webpage",
            "Value": {
                "Ref": "WebPageBucket"
            }
        },
        "CloudFrontDistribution": {
            "Description": "Id of the CloudFront distribution",
            "Value": {
                "Ref": "CloudFront"
            }
        },
        "Domain": {
            "Description": "Domain of the webpage",
            "Value": {
                "Ref": "Domain"
            }
        }
    }
}